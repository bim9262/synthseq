(ns Clojure-Bindings)
(import '(synthseq.synthesizer Synthesizer)
        '(synthseq.playables Clip)
        '(synthseq.playables.readables ReadableSound)
        '(synthseq.playables.readables.waveforms SawWave)
        '(synthseq.playables.readables.filters StringInst)
        '(synthseq.playables.readables.operations Combinator))
(defn test-success [] (println "success"))
(defn saw [freq] (SawWave. freq))
(defn stringinst [freq] (StringInst. freq)) 
(defn add [& readables] (apply #(Combinator. %) readables))
(def synth (Synthesizer/getInstance))
(defn show-vis [] (.showVisualizer synth))
(defn kill [] (.kill synth))
(defn testSynthAutoKill [] (.size synth))
